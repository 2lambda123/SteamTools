<spp:PageBase
    x:Class="BD.WTTS.UI.Views.Pages.AuthenticatorHomePage"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://steampp.net/services"
    xmlns:spp="https://steampp.net/ui"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    Title="{ReflectionBinding Name,
                              Source={x:Static s:Plugin.Instance},
                              Mode=OneWay}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:CompileBindings="True"
    x:DataType="spp:AuthenticatorPageViewModel"
    Description="{ReflectionBinding Description,
                                    Source={x:Static s:Plugin.Instance},
                                    Mode=OneWay}"
    Subtitle="{ReflectionBinding Author,
                                 Source={x:Static s:Plugin.Instance},
                                 Mode=OneWay,
                                 Converter={StaticResource StringFormatConverter},
                                 ConverterParameter=Plugin_Author}"
    mc:Ignorable="d">
    <spp:PageBase.PreviewImage>
        <ui:ImageIconSource Source="{ReflectionBinding Icon, Source={x:Static s:Plugin.Instance}, Mode=OneWay, Converter={StaticResource BitmapAssetValueConverter}}" />
    </spp:PageBase.PreviewImage>
    <spp:PageBase.Styles>
        <Style Selector="Border#BorderBottom">
            <Setter Property="Transitions">
                <Transitions>
                    <TransformOperationsTransition
                        Delay="0:0:0.25"
                        Easing="ExponentialEaseOut"
                        Property="RenderTransform"
                        Duration="0:0:0.7" />
                </Transitions>
            </Setter>
            <Style.Animations>
                <Animation Duration="0:0:1">
                    <KeyFrame Cue="0%">
                        <Setter Property="Opacity" Value="0" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Opacity" Value="1" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="Border#BorderBottom.IsActive">
            <Setter Property="RenderTransform" Value="translateY(10px)" />
        </Style>
        <Style Selector="Border#BorderBottom:not(.IsActive)">
            <Setter Property="RenderTransform" Value="translateY(80px)" />
        </Style>
    </spp:PageBase.Styles>
    <spp:PageBase.ActionContent>
        <StackPanel Orientation="Horizontal" Spacing="2">
            <Button
                Padding="8,4"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Button.Flyout>
                    <Flyout Placement="BottomEdgeAlignedLeft">
                        <StackPanel Spacing="5">
                            <Button Command="{Binding OpenSteamLoginImportWindow}" Content="{ReflectionBinding Path=Res.Auth_SteamLoginImport, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                            <Button Command="{Binding OpenGeneralAuthenticatorImportWindow}" Content="{ReflectionBinding Path=Res.Auth_UniversalImport, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                            <Button Command="{Binding OpenSteamOtherImportWindow}" Content="{ReflectionBinding Path=Res.Auth_ImportCustomFile, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Add" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{ReflectionBinding Path=Res.Add,
                                                 Mode=OneWay,
                                                 Source={x:Static s:ResourceService.Current}}" />
                </Panel>
            </Button>
            <Button
                Padding="8,4"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Button.Flyout>
                    <Flyout Placement="BottomEdgeAlignedLeft">
                        <StackPanel Spacing="5">
                            <Button
                                Command="{Binding SetPasswordProtection}"
                                Content="{ReflectionBinding Path=Res.Auth_AddPasswordProtect,
                                                            Mode=OneWay,
                                                            Source={x:Static s:ResourceService.Current}}"
                                IsEnabled="{Binding !HasPasswordEncrypt}" />
                            <Button
                                Command="{Binding RemovePasswordProtection}"
                                Content="{ReflectionBinding Path=Res.Auth_RemovePasswordProtect,
                                                            Mode=OneWay,
                                                            Source={x:Static s:ResourceService.Current}}"
                                IsEnabled="{Binding HasPasswordEncrypt}" />
                            <Button
                                Command="{Binding ToggleLocalProtection}"
                                Content="{ReflectionBinding Path=Res.Auth_AddMachineValidation,
                                                            Mode=OneWay,
                                                            Source={x:Static s:ResourceService.Current}}"
                                IsEnabled="{Binding !HasLocalPcEncrypt}" />
                            <Button
                                Command="{Binding ToggleLocalProtection}"
                                Content="{ReflectionBinding Path=Res.Auth_RemoveMachineValidation,
                                                            Mode=OneWay,
                                                            Source={x:Static s:ResourceService.Current}}"
                                IsEnabled="{Binding HasLocalPcEncrypt}" />
                            <Button Command="{Binding EncryptHelp}" Content="{ReflectionBinding Path=Res.Auth_EncryptionHelp, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{StaticResource Lock}" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{ReflectionBinding Path=Res.Encrypt,
                                                 Mode=OneWay,
                                                 Source={x:Static s:ResourceService.Current}}" />
                </Panel>
            </Button>
            <Button
                Padding="8,4"
                Command="{Binding SyncAuthenticators}"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Sync" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{ReflectionBinding Path=Res.LocalAuth_CloudSync,
                                                 Mode=OneWay,
                                                 Source={x:Static s:ResourceService.Current}}" />
                </Panel>
            </Button>
            <Button
                Padding="8,4"
                Command="{Binding Initialize}"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Refresh" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{ReflectionBinding Path=Res.Refresh,
                                                 Mode=OneWay,
                                                 Source={x:Static s:ResourceService.Current}}" />
                </Panel>
            </Button>
            <DropDownButton
                Padding="8"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="{StaticResource More}"
                FontFamily="{StaticResource SymbolThemeFontFamily}"
                FontSize="20"
                Theme="{StaticResource TransparentButton}">
                <DropDownButton.Flyout>
                    <ui:FAMenuFlyout Placement="BottomEdgeAlignedRight">
                        <!-- <ui:MenuFlyoutSubItem Text="令牌加密"> -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding SetPasswordProtection}"  -->
                        <!--  IsEnabled="{Binding !HasPasswordEncrypt}"  -->
                        <!--  Text="添加密码保护" />  -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding RemovePasswordProtection}"  -->
                        <!--  IsEnabled="{Binding HasPasswordEncrypt}"  -->
                        <!--  Text="移除密码保护" />  -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding ToggleLocalProtection}"  -->
                        <!--  IsEnabled="{Binding !HasLocalPcEncrypt}"  -->
                        <!--  Text="添加机器验证" />  -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding ToggleLocalProtection}"  -->
                        <!--  IsEnabled="{Binding HasLocalPcEncrypt}"  -->
                        <!--  Text="移除机器验证" />  -->
                        <!--     <ui:MenuFlyoutItem Command="{Binding EncryptHelp}" Text="加密帮助" /> -->
                        <!-- </ui:MenuFlyoutSubItem> -->
                        <ui:MenuFlyoutItem Command="{Binding OpenExportWindow}" Text="{ReflectionBinding Path=Res.ExportAll, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutItem
                            Command="{Binding ReLockAuthenticator}"
                            IsEnabled="{Binding IsVerificationPass}"
                            Text="{ReflectionBinding Path=Res.Auth_lock,
                                                     Mode=OneWay,
                                                     Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.Settings_Plugin, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutSeparator />
                        <ui:MenuFlyoutItem IsEnabled="False" Text="{ReflectionBinding Path=Res.Auth_Version, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.ViewInStore, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.UseHelp, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.AboutThisPlugin, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                    </ui:FAMenuFlyout>
                </DropDownButton.Flyout>
            </DropDownButton>
        </StackPanel>
    </spp:PageBase.ActionContent>
    <DockPanel>
        <Border
            Name="BorderBottom"
            Background="{DynamicResource ControlFillColorDefaultBrush}"
            BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
            Classes.IsActive="{Binding BorderBottomIsActive}"
            CornerRadius="{StaticResource ControlCornerRadius}"
            DockPanel.Dock="Bottom">
            <DockPanel>
                <ui:CommandBar
                    HorizontalAlignment="Center"
                    DefaultLabelPosition="Right"
                    DockPanel.Dock="Left">
                    <ui:CommandBar.PrimaryCommands>
                        <ui:CommandBarButton Command="{Binding KeepDisplay}" Label="{ReflectionBinding Path=Res.Auth_FixedDisplay, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
                            <ui:CommandBarButton.IconSource>
                                <ui:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{StaticResource FavoriteStar}" />
                            </ui:CommandBarButton.IconSource>
                        </ui:CommandBarButton>
                    </ui:CommandBar.PrimaryCommands>
                    <ui:CommandBar.PrimaryCommands>
                        <ui:CommandBarButton
                            Command="{Binding EditAuthNameAsync}"
                            IconSource="Edit"
                            Label="{ReflectionBinding Path=Res.Auth_EditName,
                                                      Mode=OneWay,
                                                      Source={x:Static s:ResourceService.Current}}" />
                    </ui:CommandBar.PrimaryCommands>
                    <ui:CommandBar.PrimaryCommands>
                        <ui:CommandBarButton Command="{Binding ShowReplyWindow}" Label="{ReflectionBinding Path=Res.LocalAuth_AuthTrade, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
                            <ui:CommandBarButton.IconSource>
                                <ui:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{StaticResource Reply}" />
                            </ui:CommandBarButton.IconSource>
                        </ui:CommandBarButton>
                    </ui:CommandBar.PrimaryCommands>
                    <ui:CommandBarSeparator />
                    <ui:CommandBar.PrimaryCommands>
                        <ui:CommandBarButton
                            Command="{Binding ShowAuthJsonData}"
                            IconSource="ZoomIn"
                            Label="{ReflectionBinding Path=Res.ViewDetailedData,
                                                      Mode=OneWay,
                                                      Source={x:Static s:ResourceService.Current}}" />
                    </ui:CommandBar.PrimaryCommands>
                    <ui:CommandBar.PrimaryCommands>
                        <ui:CommandBarButton Command="{Binding ShowQrCode}" Label="{ReflectionBinding Path=Res.DisplayQRCode, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
                            <ui:CommandBarButton.IconSource>
                                <ui:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{StaticResource QrCode}" />
                            </ui:CommandBarButton.IconSource>
                            <ui:CommandBarButton.Flyout>
                                <Flyout Placement="Top">
                                    <Image
                                        Width="200"
                                        Height="200"
                                        Source="{Binding QrCodeStream, Converter={StaticResource BitmapAssetValueConverter}, Mode=OneWay}" />
                                </Flyout>
                            </ui:CommandBarButton.Flyout>
                        </ui:CommandBarButton>
                    </ui:CommandBar.PrimaryCommands>
                    <ui:CommandBar.PrimaryCommands>
                        <ui:CommandBarButton
                            Command="{Binding DeleteAuthAsync}"
                            IconSource="Delete"
                            Label="{ReflectionBinding Path=Res.LocalAuth_Delete,
                                                      Mode=OneWay,
                                                      Source={x:Static s:ResourceService.Current}}" />
                    </ui:CommandBar.PrimaryCommands>
                </ui:CommandBar>
            </DockPanel>
        </Border>
        <Panel DockPanel.Dock="Top">
            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsVisible="{CompiledBinding AuthenticatorIsEmpty}"
                Orientation="Horizontal"
                Spacing="5">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{ReflectionBinding Source={x:Static s:ResourceService.Current},
                                             Path=Res.LocalAuth_NoAuthTip,
                                             Mode=OneWay}"
                    TextWrapping="WrapWithOverflow" />
                <Button
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Content="{ReflectionBinding Source={x:Static s:ResourceService.Current},
                                                Path=Res.Add,
                                                Mode=OneWay}" />
            </StackPanel>
            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                Spacing="5">
                <StackPanel.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="!IsVerificationPass" />
                        <Binding Path="!AuthenticatorIsEmpty" />
                    </MultiBinding>
                </StackPanel.IsVisible>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{ReflectionBinding Path=Res.Auth_PasswordProtectedVerifyFirst,
                                             Mode=OneWay,
                                             Source={x:Static s:ResourceService.Current}}"
                    TextWrapping="WrapWithOverflow" />
                <Button
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Command="{Binding Initialize}"
                    Content="{ReflectionBinding Path=Res.Verify,
                                                Mode=OneWay,
                                                Source={x:Static s:ResourceService.Current}}"
                    IsEnabled="True" />
            </StackPanel>
            <ScrollViewer
                Margin="0,0,0,0"
                HorizontalScrollBarVisibility="Disabled"
                VerticalScrollBarVisibility="Auto">
                <ScrollViewer.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="IsVerificationPass" />
                        <Binding Path="!AuthenticatorIsEmpty" />
                    </MultiBinding>
                </ScrollViewer.IsVisible>
                <ItemsRepeater ItemsSource="{Binding Auths}">
                    <ItemsRepeater.Layout>
                        <UniformGridLayout
                            ItemsJustification="Start"
                            ItemsStretch="Uniform"
                            MinColumnSpacing="10"
                            MinRowSpacing="10" />
                    </ItemsRepeater.Layout>
                    <ItemsRepeater.ItemTemplate>
                        <DataTemplate DataType="{x:Type spp:AuthenticatorItemModel}">
                            <spp:AuthenticatorItem>
                                <spp:AuthenticatorItem.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuItem Header="{ReflectionBinding Path=Res.Up, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
                                            <MenuItem.Icon>
                                                <ui:SymbolIcon Symbol="ChevronUp" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{ReflectionBinding Path=Res.MoveDown, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
                                            <MenuItem.Icon>
                                                <ui:SymbolIcon Symbol="ChevronDown" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{ReflectionBinding Path=Res.FixedTop, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
                                            <MenuItem.Icon>
                                                <ui:SymbolIcon Symbol="Pin" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem
                                            Command="{ReflectionBinding $parent[spp:PageBase].DataContext.UnbindingSteamAuthAsync}"
                                            CommandParameter="{Binding}"
                                            Header="{ReflectionBinding Path=Res.LocalAuth_RemoveAuth,
                                                                       Mode=OneWay,
                                                                       Source={x:Static s:ResourceService.Current}}">
                                            <MenuItem.Icon>
                                                <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xECC9;" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{ReflectionBinding Path=Res.DefaultExport, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
                                            <MenuItem.Icon>
                                                <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEDE1;" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem
                                            Command="{ReflectionBinding $parent[spp:PageBase].DataContext.ExportAuthWithSdaFile}"
                                            CommandParameter="{Binding}"
                                            Header="{ReflectionBinding Path=Res.Auth_ExportmaFile,
                                                                       Mode=OneWay,
                                                                       Source={x:Static s:ResourceService.Current}}"
                                            IsEnabled="True">
                                            <MenuItem.Icon>
                                                <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEDE1;" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </MenuFlyout>
                                </spp:AuthenticatorItem.ContextFlyout>
                            </spp:AuthenticatorItem>
                        </DataTemplate>
                    </ItemsRepeater.ItemTemplate>
                </ItemsRepeater>
            </ScrollViewer>
        </Panel>
    </DockPanel>
</spp:PageBase>